grammar com.github.funthomas424242.language.Rezept with org.eclipse.xtext.common.Terminals

generate rezept "http://www.github.com/funthomas424242/language/Rezept"
 

 
Rezept:
	projectBeschreibung = ProjektBeschreibung | rezeptListe=Rezeptliste | produktListe=Produktliste ;
 

ProjektBeschreibung:     
 'Rezeptsammlung' '{'
 		'groupId' '=' groupId=STRING ';'
 		'artifactId' '=' artifactId=STRING ';'
 		'version' '=' version=STRING ';'
 		'Media Folder' ':' resourcesDir=STRING ';'
	 	('siteURL' '=' siteURL=STRING ';')?
 '}' buch=BuchBeschreibung 
 ;
 
 BuchBeschreibung:
 	'Buch' '{'
 	(imports+=RezeptImport)* 
 	'Titel:' titel=STRING ';'
 	(autoren+=Autor)+
 	('Vorwort:' vorwort=STRING 	(absatz+=Absatz)* )?
 	(lizenz=Lizenz)?
 	('Veröffentlicht am:' datumPublished=DATUM '.')?
 	'}'
 ;
 
 Absatz:
 	'Absatz:' 
 	(titel=HEADER)?
 	text=STRING
 ;
 
 Autor:
 	'Autor:' '{'
 	'Vorname:' vorname=STRING
 	'Nachname:' nachname=STRING
 	('Organisation:' organisationsName=STRING)?
 	'ModifikationsNotiz:' modifikationsNotiz=STRING
 	'}'
 ;
 
 Lizenz:
 	'Lizenzhinweis:' hinweis=STRING
 	('Lizenztext:' text=STRING)?
 ;
 	
 RezeptImport:
 	'import rezepte' importedResource=STRING ';'	
 ;
 
 
 Produktliste:
 	'Produktliste' name=QualifiedName ';' 
 	//(imports
 	(rezepte+=ProduktBlatt)+
 ;
 
 ProduktBlatt:
 	'Produkt' name=Name '{'
	 	'Verpackung' verpackung=Name '.'
 '}';
 
 Rezeptliste:
 	'Rezeptliste' name=STRING ';' 
 	(imports+=ProduktImport)*
 	(rezepte+=RezeptBlatt)+
 ;
 
 ProduktImport:
 	'import produkte' importedResource=STRING ';'
 ;
 
 RezeptBlatt:
 	'Rezept' id=STRING '{'
	 	'Titel:' titel=STRING '.'
	 	('Untertitel:' untertitel=STRING '.')?
	 	'Kategorie:' kategorie=STRING '.'
	 	('Quelle:' quelle=Quelle)?
	 	('Ausreichend für' personen=INT 'Personen.')? 	
	 	'Letzte Änderung:' letzteAenderung=DATUM '.'
	 	(tags+=Tag)+
	 	// TODO
 '}';
 
 Quelle:
 	Literaturquelle | Personenquelle
 ;
 
 Literaturquelle:
 	'übernommen' ('verändert'| 'unverändert') 'aus' beschreibung=STRING '.'
 ;
 
 Personenquelle:
 	'überliefert' 'von' personenBeschreibung=STRING '.'
 ;
 
 Tag:
 	DiaetTag | StoffTag | BenutzerTag
 ;
 
 StoffTag:
 	'Stoff' stoff=STRING '.'
 ;
 
 BenutzerTag:
 	'Tag:' bezeichnung=STRING '.'
 ;
 
 DiaetTag:
 	'Diät:' diaet=STRING '.'
 ;
 
 Name:
 	BEZEICHNER
 ;
 
 
 terminal BEZEICHNER : ('a'..'z'|'A'..'Z'|'ä'..'ü'| 'Ä'..'Ü'|'#'|'_') ('a'..'z'|'A'..'Z'|'ä'..'ü'| 'Ä'..'Ü'|'#'|'_'|'0'..'9')*;
 terminal DATUM : ('0'..'9') ('0'..'9') '.' ('0'..'9') ('0'..'9') '.' ('0'..'9') ('0'..'9')('0'..'9') ('0'..'9');
 terminal HEADER :
			'==' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'=')  )+ '==' |
			'--' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'-')  )+ '--'
			;
 
PackageDeclaration:
    'package' name=QualifiedName '{'
        (elements+=AbstractElement)*
    '}';
 
AbstractElement:
    PackageDeclaration | Type | Import;
 
QualifiedName:
    BEZEICHNER ('.' BEZEICHNER)*;
 
Import:
    'import' importedNamespace=QualifiedNameWithWildcard;
  
QualifiedNameWithWildcard:
    QualifiedName '.*'?;
  
Type:
    DataType | Entity;
  
DataType:
    'datatype' name=ID;
 
Entity:
    'entity' name=ID ('extends' superType=[Entity|QualifiedName])? '{'
        (features+=Feature)*
    '}';
 
Feature:
    (many?='many')? name=ID ':' type=[Type|QualifiedName];


  
  
 